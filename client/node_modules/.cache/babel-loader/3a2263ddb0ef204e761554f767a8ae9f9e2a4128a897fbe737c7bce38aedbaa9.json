{"ast":null,"code":"var _jsxFileName = \"/Users/troloko/Desktop/Development/Background AI/openai-image-background-app/client/src/components/ImageUploader.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageUploader = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (!selectedFile) {\n      setError('Please select an image file to upload.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('image', selectedFile);\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await axios.post('/api/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      console.log('Upload successful:', response.data);\n    } catch (err) {\n      setError('Error uploading image. Please try again.');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image-uploader\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/png\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      disabled: loading,\n      children: loading ? 'Uploading...' : 'Upload Image'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(ImageUploader, \"mdJJ9DPIapRvQyU0s0q9Nh0TCpc=\");\n_c = ImageUploader;\nexport default ImageUploader;\nvar _c;\n$RefreshReg$(_c, \"ImageUploader\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ImageUploader","_s","selectedFile","setSelectedFile","loading","setLoading","error","setError","handleFileChange","event","target","files","handleUpload","formData","FormData","append","response","post","headers","console","log","data","err","className","children","type","accept","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/troloko/Desktop/Development/Background AI/openai-image-background-app/client/src/components/ImageUploader.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst ImageUploader = () => {\n    const [selectedFile, setSelectedFile] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    const handleFileChange = (event) => {\n        setSelectedFile(event.target.files[0]);\n    };\n\n    const handleUpload = async () => {\n        if (!selectedFile) {\n            setError('Please select an image file to upload.');\n            return;\n        }\n\n        const formData = new FormData();\n        formData.append('image', selectedFile);\n\n        setLoading(true);\n        setError(null);\n\n        try {\n            const response = await axios.post('/api/upload', formData, {\n                headers: {\n                    'Content-Type': 'multipart/form-data',\n                },\n            });\n            console.log('Upload successful:', response.data);\n        } catch (err) {\n            setError('Error uploading image. Please try again.');\n            console.error(err);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    return (\n        <div className=\"image-uploader\">\n            <input type=\"file\" accept=\"image/png\" onChange={handleFileChange} />\n            <button onClick={handleUpload} disabled={loading}>\n                {loading ? 'Uploading...' : 'Upload Image'}\n            </button>\n            {error && <p className=\"error\">{error}</p>}\n        </div>\n    );\n};\n\nexport default ImageUploader;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMY,gBAAgB,GAAIC,KAAK,IAAK;IAChCN,eAAe,CAACM,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC1C,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI,CAACV,YAAY,EAAE;MACfK,QAAQ,CAAC,wCAAwC,CAAC;MAClD;IACJ;IAEA,MAAMM,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEb,YAAY,CAAC;IAEtCG,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACA,MAAMS,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,IAAI,CAAC,aAAa,EAAEJ,QAAQ,EAAE;QACvDK,OAAO,EAAE;UACL,cAAc,EAAE;QACpB;MACJ,CAAC,CAAC;MACFC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEJ,QAAQ,CAACK,IAAI,CAAC;IACpD,CAAC,CAAC,OAAOC,GAAG,EAAE;MACVf,QAAQ,CAAC,0CAA0C,CAAC;MACpDY,OAAO,CAACb,KAAK,CAACgB,GAAG,CAAC;IACtB,CAAC,SAAS;MACNjB,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;EAED,oBACIN,OAAA;IAAKwB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC3BzB,OAAA;MAAO0B,IAAI,EAAC,MAAM;MAACC,MAAM,EAAC,WAAW;MAACC,QAAQ,EAAEnB;IAAiB;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACpEhC,OAAA;MAAQiC,OAAO,EAAEpB,YAAa;MAACqB,QAAQ,EAAE7B,OAAQ;MAAAoB,QAAA,EAC5CpB,OAAO,GAAG,cAAc,GAAG;IAAc;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,EACRzB,KAAK,iBAAIP,OAAA;MAAGwB,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAElB;IAAK;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEd,CAAC;AAAC9B,EAAA,CA7CID,aAAa;AAAAkC,EAAA,GAAblC,aAAa;AA+CnB,eAAeA,aAAa;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}